plugins {
    id "java-library"
    id "eclipse"
    id "maven-publish"
    id "fabric-loom" version "${loom_version}" apply false
    id "com.diffplug.spotless" version "7.2.1"
    //id "me.modmuss50.remotesign" version "0.5.0" apply false
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

def isCi = providers.environmentVariable("CI").present || project.hasProperty("ci")

def branchProvider = providers.of(GitBranchValueSource.class) {}

def getBranchSafe = {
    try {
        return branchProvider.get().replace("/", "_")
    } catch (Exception e) {
        logger.warn("Could not determine git branch for CI suffix: " + e.message)
        return "unknown"
    }
}

version = project.version + "+MC-${minecraft_version}" + (isCi ? getBranchSafe() : "local")
logger.lifecycle("Building Ji Libs: " + version)